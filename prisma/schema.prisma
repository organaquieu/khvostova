generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  firstName String?
  email     String?  @unique
  phone     String?  @unique
  role      Role     @default(USER)
  shoulders Int?
  chest     Int?
  waist     Int?
  hips      Int?
  wrist     Int?
  neck      Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]
  carts     Cart[]
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  shoulders   Int?
  chest       Int?
  waist       Int?
  hips        Int?
  wrist       Int?
  neck        Int?
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int
  orders      Order[]
  cartItems   CartItem[]
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  products  Product[]
}

model Cart {
  id        Int        @id @default(autoincrement())
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  userId    Int
  items     CartItem[]
}

model CartItem {
  id         Int      @id @default(autoincrement())
  quantity   Int
  customSize String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  cart       Cart     @relation(fields: [cartId], references: [id])
  cartId     Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
}

model Order {
  id         Int      @id @default(autoincrement())
  quantity   Int
  customSize String?
  orderedAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
  product    Product  @relation(fields: [productId], references: [id])
  productId  Int
}

enum Role {
  USER
  ADMIN
}
